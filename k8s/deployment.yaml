apiVersion: apps/v1
kind: Deployment
metadata:
  name: mercury
  namespace: athena-edge
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mercury
  template:
    metadata:
      labels:
        app: mercury
    spec:
      serviceAccountName: mercury-sa
      containers:
        - name: mercury
          image: athena/mercury:${TAG}
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
              name: mercury-svc
          resources:
            limits:
              cpu: "500m"
              memory: "500Mi"
            requests:
              cpu: "250m"
              memory: "250Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: edge-mercury
  namespace: athena-edge
spec:
  selector:
    app: mercury
  ports:
    - protocol: TCP
      port: 80
      targetPort: mercury-svc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole

metadata:
  name: mercury-cluster-role

rules:
  - apiGroups: [""]
    resources: ["nodes", "services", "pods", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount

metadata:
  name: mercury-sa
  namespace: athena-edge
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding

metadata:
  name: mercury-cluster-role-binding

roleRef:
  kind: ClusterRole
  name: mercury-cluster-role
  apiGroup: rbac.authorization.k8s.io

subjects:
  - kind: ServiceAccount
    name: mercury-sa
    namespace: athena-edge
